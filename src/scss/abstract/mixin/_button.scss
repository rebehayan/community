@use "sass:map";
@use "../mixin/background" as *;

// 버튼크기정의
@mixin buttonSize($mapName, $i) {
  $fs: map.get($mapName, $i, fontSize);
  $height: map.get($mapName, $i, height);
  $border: map.get($mapName, $i, border) solid;
  $px: map.get($mapName, $i, padding);

  &.#{map.get($mapName, $i, class)} {
    font-size: $fs;
    height: $height;
    border: $border;
    padding-inline: $px;
  }
}
// 버튼색상정의
@mixin buttonColor($mapName, $i) {
  &.#{map.get($mapName, $i, class)} {
    border-color: map.get($mapName, $i, borderColor);
    background-color: map.get($mapName, $i, bgColor);
    color: map.get($mapName, $i, color);
    transition: 0.4s;
    &:hover {
      border-color: map.get($mapName, $i, hoverBorderColor);
      background-color: map.get($mapName, $i, hoverBgColor);
      color: map.get($mapName, $i, hoverColor);
    }
    &:active {
      border-color: map.get($mapName, $i, activeBorderColor);
      background-color: map.get($mapName, $i, activeBgColor);
      color: map.get($mapName, $i, activeColor);
    }
    &:focus {
      border-color: map.get($mapName, $i, focusBorderColor);
      background-color: map.get($mapName, $i, focusBgColor);
      color: map.get($mapName, $i, focusColor);
    }
    &:disabled {
      border-color: map.get($mapName, $i, disabledBorderColor);
      background-color: map.get($mapName, $i, disabledBgColor);
      color: map.get($mapName, $i, disabledColor);
    }
  }
}
// 버튼아이콘정의
@mixin btnIcon($mapName, $class) {
  @include background(map.get($mapName, $class, bgImg), 0 0, null, contain);
  content: "";
  width: map.get($mapName, $class, width);
  height: map.get($mapName, $class, height);
}

@mixin buttonIcon($mapName, $i) {
  $direction: map.get($mapName, $i, direction);

  &.ico#{$i} {
    @if $direction == "b" or $direction == "before" {
      &::before {
        @include btnIcon($mapName, $i);
      }
    } @else if $direction == "a" or $direction == "after" {
      &::after {
        @include btnIcon($mapName, $i);
      }
    }
  }
}
